# Set the platform and encoding
platform :osx, '10.14'

# Set UTF-8 encoding for CocoaPods
ENV['LANG'] = 'en_US.UTF-8'
ENV['LC_ALL'] = 'en_US.UTF-8'

# Disable stats to improve build performance
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'ephemeral', 'Flutter-Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure \"flutter pub get\" is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Flutter-Generated.xcconfig, then run \"flutter pub get\""
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_macos_podfile_setup

target 'Runner' do
  use_frameworks! :linkage => :static
  
  # Flutter plugins (including flutter_sequencer)
  flutter_install_all_macos_pods File.dirname(File.realpath(__FILE__))
  
  target 'RunnerTests' do
    inherit! :search_paths
  end
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_macos_build_settings(target)
    
    # Additional settings for each target
    target.build_configurations.each do |config|
      # Common settings for all targets
      config.build_settings['MACOSX_DEPLOYMENT_TARGET'] = '10.14'
      config.build_settings['ENABLE_BITCODE'] = 'NO'
      config.build_settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'c++17'
      config.build_settings['CLANG_CXX_LIBRARY'] = 'libc++'
      config.build_settings['CLANG_ENABLE_MODULES'] = 'YES'
      config.build_settings['CLANG_ENABLE_OBJC_ARC'] = 'YES'
      
      # Additional linker flags
      other_ldflags = config.build_settings['OTHER_LDFLAGS'] || ['$(inherited)']
      other_ldflags += [
        '-ObjC',
        '-lc++',
        '-framework', 'AudioToolbox',
        '-framework', 'CoreAudio',
        '-framework', 'CoreAudioKit',
        '-framework', 'AVFoundation',
        '-framework', 'CoreMIDI'
      ]
      config.build_settings['OTHER_LDFLAGS'] = other_ldflags
      
      # Include paths for sfizz and other dependencies
      header_search_paths = config.build_settings['HEADER_SEARCH_PATHS'] || ['$(inherited)']
      header_search_paths += [
        '${PODS_ROOT}/../.symlinks/plugins/flutter_sequencer/macos/Classes',
        '${PODS_ROOT}/../.symlinks/plugins/flutter_sequencer/macos/third_party/sfizz/src',
        '${PODS_ROOT}/../.symlinks/plugins/flutter_sequencer/macos/third_party/sfizz/xcframeworks/libsfizz.xcframework/macos-arm64_x86_64/Headers'
      ]
      config.build_settings['HEADER_SEARCH_PATHS'] = header_search_paths.uniq
      
      # Library search paths
      library_search_paths = config.build_settings['LIBRARY_SEARCH_PATHS'] || ['$(inherited)']
      library_search_paths += [
        '${PODS_CONFIGURATION_BUILD_DIR}',
        '${PODS_ROOT}/../.symlinks/plugins/flutter_sequencer/macos/third_party/sfizz/xcframeworks'
      ]
      config.build_settings['LIBRARY_SEARCH_PATHS'] = library_search_paths.uniq
      
      # Add -fmodules to OTHER_CFLAGS
      other_cflags = config.build_settings['OTHER_CFLAGS'] || ['$(inherited)']
      other_cflags << '-fmodules' unless other_cflags.include?('-fmodules')
      config.build_settings['OTHER_CFLAGS'] = other_cflags
      
      # Add -fcxx-modules to OTHER_CPLUSPLUSFLAGS
      other_cplusplusflags = config.build_settings['OTHER_CPLUSPLUSFLAGS'] || ['$(inherited)']
      other_cplusplusflags << '-fcxx-modules' unless other_cplusplusflags.include?('-fcxx-modules')
      config.build_settings['OTHER_CPLUSPLUSFLAGS'] = other_cplusplusflags
    end
  end
  
  # Fix for Xcode 12.5+ compatibility
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '10.0' if config.respond_to?(:build_settings) && config.build_settings.key?('IPHONEOS_DEPLOYMENT_TARGET')
    end
  end
  
  # Save the project
  installer.pods_project.save
end
